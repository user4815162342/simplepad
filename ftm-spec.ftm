<h1>Formatted Text Markup</h1><p><b>FTM</b> (Formatted Text Markup) is a lightweight format for storage and interchange of formatted text. It is intended to be easy for humans to read and write, easy for machines to parse and generate in standard ways, and easy to build software around. FTM is based on a subset of HTML5, and therefore uses conventions that are familiar to all web designers, and should be very easily rendered in a web browser, and edited by those browsers which support editing.&nbsp;</p><p>FTM is designed to be easily edited in a WYSIWYG editor.&nbsp;A WYSIWYG (What-you-see-is-what-you-get) editor displays text already formatted, and lets you edit it as it appears. However, it is also designed so that a human reader can easily see how the text is formatted, and make changes to the text without a WYSIWYG editor.</p><p>FTM is built around plain text that is marked up to indicating how the text should be displayed. The actual way that the text is displayed may and should differ depending on whether the document is being printed, displayed on screen, or in a console. FTM can use markup to describe how the text should be structured, and indicate where certain changes to the style of the text should be made to indicate things such as emphasis. The application can then be configured separately outside of FTM content, to display the text in a way that is pleasing to the human eye.</p><p>FTM consists of three basic structures:</p><ul><li>Text, which indicates the content of the document.</li><li>Elements, made up of tags, attributes and contents, which indicate structure and format of the text.</li><li>Character references, which indicate special symbols which are sometimes hard to type.</li></ul><p>An FTM document consists of a mixture of any number of these three structures in any order, as long as they meet the restrictions described below. There are no headers or 'root' elements. However, it is recommended that all content be enclosed inside one or more block elements.</p><p></p><h2>Elements</h2><p>The following is a list of all tags allowed in FTM and their allowed attributes.&nbsp;If a tag name or attribute name is not listed here, then it is not allowed in FTM at this time. This does not mean it won't be allowed in the future.&nbsp;All tags allowed in FTM have the same semantics and meaning as their HTML counterparts.</p><ul><li><b>h1</b>, <b>h2</b>, <b>h3</b>, <b>h4</b>, <b>h5</b>, <b>h6</b></li><li><b>p</b></li><li><b>hr</b></li><li><b>pre</b></li><li><b>blockquote</b></li><li><b>ol</b></li><ul><li><b>start =</b>&nbsp;<i>integer</i></li></ul><li><b>ul</b></li><li><b>li</b></li><ul><li><i>(if the element is a child of <b>ol</b>)</i>&nbsp;<b>value = </b><i>integer</i></li></ul><li><b>a</b></li><ul><li><b>href =</b>&nbsp;<i>url</i></li></ul><li><b>em</b></li><li><b>strong</b></li><li><b>code</b></li><li><b>sub, sup</b></li><li><b>i</b></li><li><b>b</b></li><li><b>br</b></li><li><b>img</b></li><ul><li><b>src = </b><i>url</i></li><li><b>alt = </b><i>text</i></li><li><b>style = </b><i>CSS style attribute limited to the following properties and possible values. </i>This is the only use for style and CSS in FTM, but it is necessary due to the need to lay out pictures within the document.</li><ul><li><b>display: </b><i>"inline", "block"</i></li><li><b>float: </b><i>"left", "right"</i></li><li><b>clear: </b><i>"left", "right", "none"</i></li><li><b>width: </b><i>length &gt; 0</i></li><li><b>height: </b><i>length &gt; 0</i></li></ul></ul><li><b>table</b></li><li><b>tr</b></li><li><b>th, td</b></li><ul><li><b>colspan = </b><i>integer &gt; 0</i></li><li><b>rowspan = </b><i>integer &gt;= 0</i></li></ul><li><b>span </b>This tag is only necessary for specifying semantic information about an inline section of text, which may be important to the application.&nbsp;</li></ul><p></p><p>All elements also support the following global attributes:</p><ul><li><b>id = </b><i>any text which is intended to be unique within the document. </i>This attribute is necessary to allow for in-document links, such as for footnotes.&nbsp;Applications are allowed to automatically change these, as well as references to them, in order to ensure they are unique within a document when FTM content is embedded inside an HTML document.</li><li><b>class = </b><i>a space-delimited list of class names. </i>This can be used to specify semantic information for tags. It is not actually very useful at this point, as it is not easy to edit, but it would be bad form to make this illegal at this point and force users to have to remove this semantic information from existing documents, then add them in later.</li><li><b>data-ftm-version = </b><i>1.0 </i>This is optional, and can be used on at least one element found in the document to specify the version of the FTM spec which this document follows. For future versions of this spec which make breaking changes, this value can be modified and made non-optional. If this value is not found anywhere, it is assumed to mean that the FTM document follows the rules for version 1.0. If any other value is found, when the application expects version 1.0, it should throw a warning that features may be lost.</li></ul><h2>Syntax</h2><p></p><p></p><p>The syntax for elements, entities and text is the same as described in the specification for HTML5, at http://www.w3.org/TR/html5/syntax.html. In practice, however, a slightly more simplified format is recommended, removing a lot of the exceptions and ambiguous choices which are intended to make HTML5 backwards compatible with older browsers, and introducing simpler restrictions that make parsing easier.</p><pre>document = content*</pre><pre>content = text | element | character-reference</pre><p>Text consists of one or more of any non-control character except the&nbsp;<b>&lt;</b>&nbsp;(less-than sign) and <b>&amp;</b>&nbsp;(ampersand).</p><pre>text = ([\u0020-?] ! <b>&lt; </b>! <b>&amp;</b>)+</pre><p>An element consists of either an empty tag, or an opening tag followed by any content followed by a closing tag.</p><pre>element = empty-tag | (opening-tag content closing-tag)</pre><p>A tag begins with a <b>&lt;</b>&nbsp;(less-than sign), followed by content which indicates whether it is an opening, closing or empty tag, followed by a <b>&gt;</b> (greater-than sign).</p><p>An empty tag's contents are a tag name, followed by an optional series of attributes, followed by a <b>/</b>&nbsp;(solidus).</p><pre>empty-tag = <b>&lt; </b>tag-name<b>&nbsp;(</b>whitespace attributes)? whitespace? <b>/ &gt;</b></pre><p></p><pre>whitespace = [\u0020\u0009\u000A\u000C\u000D]*</pre><p></p><p>An opening tag's contents are a tag name, followed by an optional series of attributes.</p><pre>opening-tag = <b>&lt; </b>tag-name (whitespace attributes)? <b>&gt;</b></pre><p>A closing tag's contents are an initial <b>/</b>&nbsp;(solidus), followed by the tag name.</p><pre>closing-tag = <b>&lt;</b> <b>/ </b>tag-name <b>&gt;</b></pre><p>The tag name is a simple identifier, using alphanumeric characters from the Basic Latin unicode block. The names are case-insensitive, but are referenced in this document using lower case. The valid tag names are described below, and depend on the context as well as FTM restrictions.</p><pre>tag-name = [A-Za-z0-9]*</pre><p>The attributes consists of a series of attributes separated by whitespace.</p><pre>attributes = attribute [whitespace attributes]</pre><p>An attribute consists of an attribute name, followed by an <b>=</b>&nbsp;(equals sign), followed by&nbsp;an attribute value.&nbsp;</p><pre>attribute = attribute-name whitespace? <b>=</b> whitespace? attribute-value</pre><p>The attribute value is a double-quoted string containing a mixture of text and character references and no <b>"</b>'s&nbsp;(double quotes).</p><pre>attribute-value = <b>"</b> (text | character-reference ! <b>"</b> )* <b>"</b></pre><p>The attribute name is an identifier with the same syntax as a tag-name. The valid attribute names and their values depend on the tag name they are associated with and their context.</p><p></p><pre>attribute-name = [A-Za-z0-9]*</pre><p></p><p>A character reference consists of an <b>&amp;</b>&nbsp;(ampersand) followed by a reference name, or a pound sign, which indicates a number, followed by a semi-colon. Numbers can be in decimal or hexadecimal form.</p><pre>character-reference = <b>&amp;</b> character-reference-name | <b>#</b> ([0-9]+ | <b>x</b> [0-9A-Fa-f]+) <b>;</b></pre><p>The character reference name follows the same syntax as the tag-name.</p><p></p><pre>attribute-name = [A-Za-z0-9]*</pre><h2><br></h2><p></p>